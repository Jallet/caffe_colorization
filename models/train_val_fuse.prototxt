name: "FCN"
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TRAIN
  }
transform_param {
    mean_value: 0.5
  }
  data_param {
    source: "/home/jiangliang/code/caffe_colorization/data/flowers/train_y.lmdb"
    batch_size: 16
    backend: LMDB
  }
}
layer {
  name: "label"
  type: "Data"
  top: "label"
  include {
    phase: TRAIN
  }
  data_param {
    source: "/home/jiangliang/code/caffe_colorization/data/flowers/train_uv.lmdb"
    batch_size: 16
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  include {
    phase: TEST
  }
  transform_param {
    mean_value: 0.5
  }
  data_param {
    source: "/home/jiangliang/code/caffe_colorization/data/flowers/val_y.lmdb"
    batch_size: 2
    backend: LMDB
  }
}
layer {
  name: "label"
  type: "Data"
  top: "label"
  include {
    phase: TEST
  }
  data_param {
    source: "/home/jiangliang/code/caffe_colorization/data/flowers/val_uv.lmdb"
    batch_size: 2
    backend: LMDB
  }
}

layer { 
    bottom: "data" 
    top: "conv1_1" 
    name: "conv1_1" 
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param { 
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 64 
        pad: 1
        kernel_size: 3
    } 
}
layer { 
    bottom: "conv1_1" 
    top: "conv1_1" 
    name: "relu1_1" 
    type: "ReLU"
}
layer { 
    bottom: "conv1_1" 
    top: "conv1_2" 
    name: "conv1_2"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param { 
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 64 
        pad: 1 
        kernel_size: 3 
    }
}
layer { 
    bottom: "conv1_2" 
    top: "conv1_2" 
    name: "relu1_2" 
    type: "ReLU" 
}
layer { 
    name: "pool1" 
    bottom: "conv1_2" 
    top: "pool1" 
    type: "Pooling"
    pooling_param { 
        pool: MAX 
        kernel_size: 2 
        stride: 2 
    }
}
layer {
    name: "bn1"
    type: "BatchNorm"
    bottom: "pool1"
    top: "bn1"
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
}
layer {
    name : "sigmoid1"
    type: "Sigmoid"
    bottom: "bn1"
    top: "sigmoid1"
}
layer { 
    name: "conv2_1" 
#    bottom: "pool1" 
    bottom: "sigmoid1"
    top: "conv2_1" 
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 128 
        pad: 1
        kernel_size: 3 
    }
}
layer {
    bottom: "conv2_1"
    top: "conv2_1"
    name: "relu2_1"
    type: "ReLU"
}
layer {
    bottom: "conv2_1"
    top: "conv2_2"
    name: "conv2_2"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 128
        pad: 1
        kernel_size: 3
    }
}
layer {
    bottom: "conv2_2"
    top: "conv2_2"
    name: "relu2_2"
    type: "ReLU"
}
layer { 
    bottom: "conv2_2"
    top: "pool2"
    name: "pool2"
    type: "Pooling"
    pooling_param {
        pool: MAX
        kernel_size: 2
        stride: 2
    }
}
#layer {
#    bottom: "pool2"
#    top: "conv3_1"
#    name: "conv3_1"
#    type: "Convolution"
#    param {
#      lr_mult: 1
#      decay_mult: 1
#    }
#    param {
#      lr_mult: 2
#      decay_mult: 0
#    }
#    convolution_param {
#        num_output: 256
#        pad: 1
#        kernel_size: 3
#    }
#}
#layer {
#    bottom: "conv3_1"
#    top: "conv3_1"
#    name: "relu3_1"
#    type: "ReLU"
#}
#layer {
#    bottom: "conv3_1"
#    top: "conv3_2"
#    name: "conv3_2"
#    type: "Convolution"
#    param {
#      lr_mult: 1
#      decay_mult: 1
#    }
#    param {
#      lr_mult: 2
#      decay_mult: 0
#    }
#    convolution_param {
#        num_output: 256
#        pad: 1
#        kernel_size: 3
#    }
#}
#layer {
#    bottom: "conv3_2"
#    top: "conv3_2"
#    name: "relu3_2"
#    type: "ReLU" 
#}
#layer {
#    bottom: "conv3_2"
#    top: "conv3_3"
#    name: "conv3_3"
#    type: "Convolution"
#    param {
#      lr_mult: 1
#      decay_mult: 1
#    }
#    param {
#      lr_mult: 2
#      decay_mult: 0
#    }
#    convolution_param {
#        num_output: 256
#        pad: 1
#        kernel_size: 3
#    }
#}
#layer {
#    bottom: "conv3_3"
#    top: "conv3_3"
#    name: "relu3_3"
#    type: "ReLU" 
#}
#layer {
#    bottom: "conv3_3" 
#    top: "pool3" 
#    name: "pool3" 
#    type: "Pooling"
#    pooling_param { 
#        pool: MAX 
#        kernel_size: 2 
#        stride: 2 
#    }
#}
layer {
    name: "bn2"
    type: "BatchNorm"
    bottom: "pool2"
    top: "bn2"
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
}
layer {
    name : "sigmoid2"
    type: "Sigmoid"
    bottom: "bn2"
    top: "sigmoid2"
}
layer {
#    bottom: "pool3"
#    bottom: "pool2"
    bottom: "sigmoid2"
    top: "conv4_1"
    name: "conv4_1" 
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param { 
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 512 
        pad: 1 
        kernel_size: 3 
    }
}
layer {
    bottom: "conv4_1"
    top: "conv4_1"
    name: "relu4_1"
    type: "ReLU"
}
layer {
    bottom: "conv4_1"
    top: "conv4_2"
    name: "conv4_2"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 512
        pad: 1
        kernel_size: 3
    }
}
layer {
    bottom: "conv4_2"
    top: "conv4_2"
    name: "relu4_2"
    type: "ReLU"
}
layer {
    bottom: "conv4_2"
    top: "conv4_3"
    name: "conv4_3"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 512
        pad: 1
        kernel_size: 3
    }
}
layer {
    bottom: "conv4_3"
    top: "conv4_3"
    name: "relu4_3"
    type: "ReLU"
}
layer {
    bottom: "conv4_3"
    top: "pool4"
    name: "pool4"
    type: "Pooling"
    pooling_param {
        pool: MAX
        kernel_size: 2
        stride: 2
    }
}
layer {
    name: "bn4"
    type: "BatchNorm"
    bottom: "pool4"
    top: "bn4"
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
    param {
        lr_mult: 0
    }
}
layer {
    name : "sigmoid4"
    type: "Sigmoid"
    bottom: "bn4"
    top: "sigmoid4"
}
layer {
#    bottom: "pool4"
    bottom: "sigmoid4"
    top: "conv5_1"
    name: "conv5_1"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
            num_output: 512
            pad: 1
            kernel_size: 3
    }
}
layer {
    bottom: "conv5_1"
    top: "conv5_1"
    name: "relu5_1"
    type: "ReLU" 
}
layer {
    bottom: "conv5_1"
    top: "conv5_2"
    name: "conv5_2"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 512
        pad: 1
        kernel_size: 3
    }
}
layer {
    bottom: "conv5_2"
    top: "conv5_2"
    name: "relu5_2"
    type: "ReLU" 
}
layer {
    bottom: "conv5_2"
    top: "conv5_3"
    name: "conv5_3"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param { 
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 512
        pad: 1
        kernel_size: 3
    }
}
layer {
    bottom: "conv5_3"
    top: "conv5_3"
    name: "relu5_3"
    type: "ReLU" 
}
layer {
    bottom: "conv5_3"
    top: "pool5"
    name: "pool5"
    type: "Pooling"
    pooling_param { 
        pool: MAX 
        kernel_size: 2 
        stride: 2 
    }
}
layer {
    bottom: "pool5"
    top: "fc6"
    name: "fc6"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        kernel_size: 1
        num_output: 4096
    }
}
layer {
    bottom: "fc6"
    top: "fc6"
    name: "relu6"
    type: "ReLU" 
}
layer {
    bottom: "fc6"
    top: "fc6"
    name: "drop6"
    type: "Dropout"
    dropout_param {
        dropout_ratio: 0.5 
    }
}
layer {
    bottom: "fc6"
    top: "fc7"
    name: "fc7"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        kernel_size: 1
        num_output: 4096
    }
}
layer { 
    bottom: "fc7" 
    top: "fc7" 
    name: "relu7"
    type: "ReLU"
}
layer { 
    bottom: "fc7"
    top: "fc7"
    name: "drop7"
    type: "Dropout"
    dropout_param {
        dropout_ratio: 0.5
    }
}
layer {
    name: "score-fr"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    bottom: "fc7"
    top: "score"
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 21
        kernel_size: 1
    }
}

layer {
    type: "Deconvolution"
    name: "score2"
    bottom: "score"
    top: "score2"
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        kernel_size: 4
#        stride: 1
        num_output: 21
    }
}

layer { 
    name: "score-pool4"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    bottom: "pool4"
    top: "score-pool4"
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 21
        kernel_size: 1
    }
}

layer {
    type: "Crop"
    name: "crop"
    bottom: "score-pool4"
    bottom: "score2"
    top: "score-pool4c"
}

layer {
    type: "Eltwise"
    name: "score-fused"
    bottom: "score2"
    bottom: "score-pool4c"
    top: "score-fused"
    eltwise_param { 
        operation: SUM
    }
}

layer { 
    type: "Deconvolution"
    name: "score4"
    bottom: "score-fused"
    top: "score4"
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        kernel_size: 4
        stride: 2
        num_output: 21 
    }
}

layer {
    name: "score-pool3"
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
#    bottom: "pool3"
    bottom: "pool2"
    top: "score-pool3"
    convolution_param { 
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        num_output: 21
        kernel_size: 1 
    }
}

layer {
    type: "Crop"
    name: "crop"
    bottom: "score-pool3"
    bottom: "score4"
    top: "score-pool3c" 
}

layer { 
    type: "Eltwise"
    name: "fuse"
    bottom: "score4"
    bottom: "score-pool3c"
    top: "score-final"
    eltwise_param {
        operation: SUM
    }
}

layer { 
    type: "Deconvolution"
    name: "upsample"
    bottom: "score-final"
    top: "bigscore"
    convolution_param { 
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        kernel_size: 16
        stride: 8 
        num_output: 21
    }
}

layer {
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    name: "upconv1"
    bottom: "bigscore"
    top: "upconv1"
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        kernel_size: 3
        num_output: 12
    }
}
layer { 
    bottom: "upconv1" 
    top: "uprelu1" 
    name: "uprelu1" 
    type: "ReLU" 
}

layer {
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    name: "upconv2"
    bottom: "uprelu1"
    top: "upconv2"
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        kernel_size: 3
        num_output: 6
    }
}
layer { 
    bottom: "upconv2" 
    top: "uprelu2" 
    name: "uprelu2" 
    type: "ReLU" 
}

layer {
    type: "Convolution"
    param {
      lr_mult: 1
      decay_mult: 1
    }
    param {
      lr_mult: 2
      decay_mult: 0
    }
    name: "upconv3"
    bottom: "uprelu2"
    top: "upconv3"
    convolution_param {
        weight_filler {
            type: "xavier"
        }
        bias_filler {
            type: "constant"
            value: 0
        }
        kernel_size: 3
        num_output: 2
    }
}
layer { 
    bottom: "upconv3" 
    top: "uprelu3" 
    name: "uprelu3" 
    type: "ReLU" 
}

layer {
    type: "Crop"
    name: "crop"
#    bottom: "bigscore"
    bottom: "uprelu3"
    bottom: "label"
    top: "upscore" 
}

layer {
  type: "EuclideanLoss"
  name: "loss" 
  bottom: "upscore"
  bottom: "label"
  top: "loss"
}
